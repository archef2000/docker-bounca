---

- name: "Create postgres secret"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "db-credentials"
        namespace: default
      type: Opaque
      data:
        password: "{{ postgres_password | b64encode }}" # define your own


- name: "Create bounca statefulset"
  k8s:
    state: present
    definition:
      apiVersion: "apps/v1"
      kind: StatefulSet
      metadata:
        name: bounca
        namespace: default
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: bounca
        updateStrategy:
          type: RollingUpdate
        template:
          metadata:
            labels:
              app: bounca
          spec:
            automountServiceAccountToken: false
            securityContext:
              fsGroup: 1001
            containers:
              - name: postgres
                image: "docker.io/bitnami/postgresql:{{ bounca_postgres_image_tag }}"
                env:
                  - name: BITNAMI_DEBUG
                    value: "false"
                  - name: POSTGRESQL_VOLUME_DIR
                    value: "/var/lib/postgresql"
                  - name: PGDATA
                    value: "/var/lib/postgresql/data"
                  - name: POSTGRESQL_ENABLE_LDAP
                    value: "no"
                  - name: POSTGRES_USER
                    value: "bounca"
                  - name: POSTGRES_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: db-credentials
                        key: password
                  - name: POSTGRESQL_DATABASE
                    value: "bounca"
                securityContext:
                  runAsUser: 1001
                  runAsRoot: false
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: false
                  privileged: false
                  capabilities:
                    drop:
                      - ALL
                resources:
                  limits:
                    cpu: 400m
                    memory: 192Mi
                  requests:
                    cpu: 100m
                    memory: 96Mi
                ports:
                  - containerPort: 5432
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - /bin/sh
                        - -c
                        - >
                          until pg_isready -U "{{ postgres_user }}" -h 127.0.0.1 -p 5432; do
                            echo "Waiting for Postgres to be ready...";
                            sleep 1;
                          done;
                          echo "Postgres is up and running.";
                livenessProbe:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - exec pg_isready -U "{{ postgres_user }}" -h 127.0.0.1 -p 5432
                  failureThreshold: 6
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 5
                readinessProbe:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - -e
                      - |
                        exec pg_isready -U "{{ postgres_user }}" -h 127.0.0.1 -p 5432
                        [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /var/lib/postgresql/.initialized ]
                  failureThreshold: 6
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 5
                volumeMounts:
                  - name: dshm
                    mountPath: /dev/shm
                  - name: vrun
                    mountPath: /var/run/postgresql
                  - name: tmp
                    mountPath: /tmp
                  - name: bounca-storage
                    mountPath: /var/lib/postgresql
              - name: bounca
                image: "docker.io/aluveitie/bounca:latest"
                imagePullPolicy: IfNotPresent
                env:
                  - name: BOUNCA_FQDN
                    value: "bounca.local"
                  - name: POSTGRES_HOST
                    value: "localhost"
                  - name: POSTGRES_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: db-credentials
                        key: password
                securityContext:
                  runAsUser: 33
                  runAsRoot: false
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: false
                  privileged: false
                  capabilities:
                    drop:
                      - ALL
                resources:
                  limits:
                    cpu: 400m
                    memory: 384Mi
                  requests:
                    cpu: 100m
                    memory: 128Mi
                ports:
                  - containerPort: 8080
                    name: web
                    protocol: TCP
                startupProbe:
                  failureThreshold: 10
                  httpGet:
                    path: /
                    port: web
                    scheme: HTTP
                  periodSeconds: 15
                  timeoutSeconds: 3
                readinessProbe:
                  failureThreshold: 2
                  httpGet:
                    path: /
                    port: web
                  periodSeconds: 15
                  timeoutSeconds: 3
                volumeMounts:
                  - name: etc
                    mountPath: /etc/bounca
            volumes:
              - name: dshm
                emptyDir:
                  medium: Memory
                  sizeLimit: 256Mi
              - name: vrun
                emptyDir: {}
              - name: tmp
                emptyDir: {}
              - name: etc
                emptyDir: {}
        volumeClaimTemplates:
          - metadata:
              name: bounca-storage
            spec:
              storageClassName: longhorn
              volumeMode: Filesystem
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 256Mi